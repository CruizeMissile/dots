#!/bin/bash

function die()
{
    exit $1
}

function usage()
{
    echo "install script for dot file
options:
  -p, --proxy    Proxy to use

  -h, --help     Print this usage
  -v, --verbose  Set verbose mode
"
    die $1
}

function parse_arguments()
{
    while test $# != 0; do
        case "$1" in
            -h|--help)
                shift ; usage 0 ;;
            -v|--verbose)
                shift ; inst_verbose=true ;;
            -p|--proxy)
                shift ; inst_proxy=$1 ; shift ;;
            *)
                echo "unknown input $1" ; usage 1 ;;
        esac
    done
}

parse_arguments "$@"

work_dir="$HOME"
dots_dir="$HOME/.dots"
temp_dir="$HOME/tmp/dots"
url_link="https://github.com/CruizeMissile/dots"
dots_cmd="git --git-dir=$dots_dir --work-tree=$work_dir"

# If there is a .dots file already then delete it
[[ -d $dots_dir ]] && rm -rf $dots_dir

# If there is a proxy then configure the clone to use the proxy
[[ -n $inst_proxy ]] && inst_proxy_cmd="--config http.proxy=$inst_proxy --config https.proxy=$inst_proxy"

# Clone the dots repo
$dots_cmd clone $inst_proxy_cmd --bare $url_link $dots_dir

$dots_cmd checkout 2>&1 | egrep "\s+\." | awk {'print $1'} | xargs -I{} mv {} $backup_dir/{}

# Check to see if the backup folder has files in it
test "$(ls -A $backup_dir 2>/dev/null)" && {
    $dots_cmd checkout # rerun checkout if there was backed up files
} || {
    rm -r $backup_dir # remove the backup_dir if there is nothing there
}

# Update submodules
[[ -n $inst_proxy ]] && {
    git config --global http.proxy $inst_proxy
    git config --global https.proxy $inst_proxy
}

$dots_cmd submodule update --init --recursive $work_dir

[[ -n $inst_proxy ]] && {
    $dots_cmd submodule foreach --recursive "git config http.proxy $inst_proxy && git config https.proxy $inst_proxy" | awk '{print $2}' | xargs -I{} echo "Setting proxy $inst_proxy for {}"
    $dots_cmd checkout $HOME/.gitconfig
}

# bye bye
die 0
