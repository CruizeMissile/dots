#!/bin/bash

function die()  
{
    exit $1
}

function usage()
{
    cat << 'EOF'
Install script for .files
Options:
  -p, --proxy    Proxy to use

  -h, --help     Print this usage
  -v, --verbose  Set verbose mode
EOF
    die $1
}

function parse_arguments()
{
    positional_args=()
    local optspec=":p:hv-"
    while [ $# -gt 0 ] ; do
        unset OPTIND && unset OPTARG
        while getopts $optspec OPTION ; do
            case "$OPTION" in
                h) usage 0 ;;
                v) inst_verbose=true ;;
                p) inst_proxy="$OPTARG" ;;
                -)
                    [ $OPTIND -ge 1 ] && optind=$(expr $OPTIND - 1) || optind=$OPTIND
                    eval OPTION="\$$optind"
                    OPTARG=$(echo $OPTION | cut -d'=' -f2)
                    OPTION=$(echo $OPTION | cut -d'=' -f1)
                    case $OPTION in
                        --help|--usage) usage 0 ;;
                        --verbose) inst_verbose=true ;;
                        --proxy) inst_proxy="$OPTARG" ;;
                        *) echo "Invalid option: $OPTION $OPTARG" ;;
                    esac
                    OPTIND=1 && shift ;;
                \?) echo "Invalid option: $OPTION $OPTARG" ;;
            esac
        done
        shift $((OPTIND-1)) && positional_args+=($1) && shift
    done
}

function yadm()
{
    if command -v which >/dev/null 2>&1 && which yadm >/dev/null 2>&1; then
        echo "Found yadm installed locally, removing remote yadm() function"
        unset -f yadm
        command yadm "$@"
    else
        echo "WARNING: Using yadm remotely. You should install yadm locally."
        curl -fsSL "https://raw.github.com/TheLocehiliosan/yadm/master/yadm" | bash -s -- "$@"
    fi
}
export -f yadm

function main()
{
    dotfiles_url="https://github.com/cruizemissile/dots"

    parse_arguments "$@"

    (
        cd $HOME

        [ -n $inst_proxy ] && {
            export http_proxy=$inst_proxy
            export https_proxy=$inst_proxy
        }

        yadm clone --bootstrap $dotfiles_url

        if [[ -n $http_proxy ]] || [[ -n $https_proxy ]] ; then
            [[ ! -e "$HOME/.local/etc/bash/before.d/proxy-local.sh" ]] && touch "$HOME/.local/etc/bash/before.d/proxy-local.sh"
            [[ -n $http_proxy ]] && echo "export http_proxy=$inst_proxy"  >>  "$HOME/.local/etc/bash/before.d/proxy-local.sh"
            [[ -n $http_proxy ]] && echo "export https_proxy=$inst_proxy" >> "$HOME/.local/etc/bash/before.d/proxy-local.sh"
        fi
    )

    # bye bye
    die 0
}

main "$@"

